#  Template .NET Core build

#  This template allows you to validate your .NET Core package.
#  The workflow allows running tests and code linting on the default branch.

# To run your pipeline on a Windows machine, create a self-hosted Windows runner.
# For instructions on setting up a Windows runner, see https://support.atlassian.com/bitbucket-cloud/docs/set-up-runners-for-windows/

image: mcr.microsoft.com/dotnet/sdk:7.0

pipelines:
  pull-requests:
    "**":
      - parallel:
          - step:
              name: Build and Test
              caches:
                - dotnetcore
              script:
                - export SOLUTION_PATH=CE-API-V2/CE-API-V2.sln
                - REPORTS_PATH=./test-reports/build_${BITBUCKET_BUILD_NUMBER}
                - dotnet restore ${SOLUTION_PATH}
                - dotnet build --no-restore --configuration Release ${SOLUTION_PATH}
                - dotnet test --no-build --configuration Release --test-adapter-path:. --logger:"junit;LogFilePath=$REPORTS_PATH/junit.xml" ${SOLUTION_PATH}
          - step:
              name: Lint the code
              caches:
                - dotnetcore
              script:
                - export SOLUTION_PATH=CE-API-V2
                - export SOLUTION_NAME=CE-API-V2/CE-API-V2
                - export REPORTS_PATH=linter-reports
                - dotnet new tool-manifest
                - dotnet tool install JetBrains.ReSharper.GlobalTools
                - dotnet tool restore
                - dotnet jb inspectcode ${SOLUTION_NAME}.sln --output="${REPORTS_PATH}/jb-${BITBUCKET_BUILD_NUMBER}.xml"
              artifacts:
                - linter-reports/**
